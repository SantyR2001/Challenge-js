{"ast":null,"code":"var _jsxFileName = \"/home/santi/Escritorio/Working-dir/Challenge-js/Client/src/views/Home/ItemList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport deleteBtn from '../../../img/btn-delete.png';\nimport updateBtn from '../../../img/btn-update.png';\nimport './itemList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemList = () => {\n  _s();\n\n  const url = 'http://localhost:3000/movements';\n  const [items, setItems] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setItems(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const itemUpdate = item => {\n    this.setState({\n      body: {\n        id: item.id,\n        amount: item.amount,\n        type: item.type,\n        concept: item.concept,\n        date: item.date\n      }\n    });\n  };\n\n  const totalAmountListener = () => {\n    let totalAmount;\n\n    for (let item in items) {\n      totalAmount = totalAmount + item[3];\n    }\n\n    return totalAmount;\n  };\n\n  const getDate = date => {\n    let parseDate = date.substring(0, 10);\n    return parseDate;\n  };\n\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ITEM LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: totalAmountListener()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !items ? 'Loading...' : items.slice(items.length - 10).reverse().map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: item.type === 0 ? 'item-green' : 'item-red',\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"update-btn\",\n              alt: \"\",\n              src: updateBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), item.concept, \" | \", getDate(item.date), \" | \", item.type === 0 ? '+' : '-', \"$\", item.amount, /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"delete-btn\",\n              alt: \"\",\n              src: deleteBtn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemList, \"H7xGRC8bQBn4QeoZ9iIz2rALY5A=\");\n\n_c = ItemList;\nexport default ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"sources":["/home/santi/Escritorio/Working-dir/Challenge-js/Client/src/views/Home/ItemList/index.js"],"names":["React","useEffect","useState","deleteBtn","updateBtn","ItemList","url","items","setItems","fetchApi","response","fetch","responseJSON","json","itemUpdate","item","setState","body","id","amount","type","concept","date","totalAmountListener","totalAmount","getDate","parseDate","substring","console","log","slice","length","reverse","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport deleteBtn from '../../../img/btn-delete.png';\nimport updateBtn from '../../../img/btn-update.png';\nimport './itemList.css';\n\nconst ItemList = () => {\n    const url = 'http://localhost:3000/movements'\n    const [items, setItems] = useState()\n    const fetchApi = async () => {\n      const response = await fetch(url)\n      const responseJSON = await response.json()\n      setItems(responseJSON)\n    }\n    useEffect(() => {\n      fetchApi()\n    }, [])\n\n    const itemUpdate = (item) => {\n      this.setState({\n        body:{\n          id: item.id,\n          amount: item.amount,\n          type: item.type,\n          concept: item.concept,\n          date: item.date\n        }\n      }\n      )\n    }\n\n    const totalAmountListener = () => {\n        let totalAmount;\n        for(let item in items){\n          totalAmount = totalAmount + item[3];\n        }\n        return totalAmount;\n    }\n    const getDate = (date) => {\n      let parseDate = date.substring(0, 10);\n      return parseDate;\n    }\n    console.log(items);\n  return (\n    <div>\n        <div>\n        <h2>\n            ITEM LIST\n        </h2>\n        <div>\n            {totalAmountListener()}\n        </div>\n        </div>\n        <ul>\n        { !items ? 'Loading...' : \n          items.slice(items.length-10).reverse().map((item,index) => {\n              return <li className={item.type===0 ? 'item-green' : 'item-red'} key={index}>\n                <button ><img className=\"update-btn\" alt=\"\" src={updateBtn}/></button>\n                {item.concept} | {getDate(item.date)} | {item.type===0 ? '+' : '-'}${item.amount}\n                <button ><img className=\"delete-btn\" alt=\"\" src={deleteBtn}/></button>\n                </li>       \n          })\n        }\n        </ul>\n    </div>\n  );\n};\n\nexport default ItemList;\n"]},"metadata":{},"sourceType":"module"}