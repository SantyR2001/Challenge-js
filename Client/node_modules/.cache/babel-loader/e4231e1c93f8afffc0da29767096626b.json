{"ast":null,"code":"var _jsxFileName = \"/home/santi/Escritorio/Challenge-js/Client/src/views/Home/ItemList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./itemList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemList = () => {\n  _s();\n\n  const url = \"http://localhost:3001/movements\";\n  const [items, setItems] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setItems(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const concept = document.getElementById(\"concept\");\n    const amount = document.getElementById(\"amount\");\n    console.log(concept);\n    fetch(`http://localhost:3001/edit/4`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify({\n        concept: concept.value,\n        amount: amount.value\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(res => {\n      if (res.success) {\n        alert(\"data is updated!\");\n      }\n    });\n  };\n\n  const [itemDate, setItemDate] = useState([]);\n  let totalAmount = 0;\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const itemDelete = async id => {\n    await fetch(`http://localhost:3001/delete/${id}`, {\n      method: 'DELETE'\n    });\n  };\n\n  const getItem = item => {\n    setItemDate(item);\n    setIsUpdating(true);\n  };\n\n  const getDate = date => {\n    let parseDate = date.substring(0, 10);\n    return parseDate;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ITEM LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!items ? \"Loading...\" : items.slice(items.length - 10).reverse().map((item, index) => {\n        if (item.type === 0) {\n          totalAmount = totalAmount + item.amount;\n        } else {\n          totalAmount = totalAmount - item.amount;\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: item.type === 0 ? \"item-green\" : \"item-red\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"update-btn\",\n              onClick: () => getItem(item),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this), item.concept, \" | \", getDate(item.date), \" |\", \" \", item.type === 0 ? \"+\" : \"-\", \"$\", item.amount, /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => itemDelete(item.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"MONTO TOTAL: \", totalAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemList, \"NKSPh8casYe2MHUKvQI0s+xlc+c=\");\n\n_c = ItemList;\nexport default ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"sources":["/home/santi/Escritorio/Challenge-js/Client/src/views/Home/ItemList/index.js"],"names":["React","useEffect","useState","ItemList","url","items","setItems","fetchApi","response","fetch","responseJSON","json","handleSubmit","e","preventDefault","concept","document","getElementById","amount","console","log","method","mode","body","JSON","stringify","value","headers","then","res","success","alert","itemDate","setItemDate","totalAmount","isUpdating","setIsUpdating","itemDelete","id","getItem","item","getDate","date","parseDate","substring","slice","length","reverse","map","index","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./itemList.css\";\n\nconst ItemList = () => {\n  const url = \"http://localhost:3001/movements\";\n  const [items, setItems] = useState();\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setItems(responseJSON);\n  };\n  useEffect(() => {\n    fetchApi();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const concept = document.getElementById(\"concept\");\n    const amount = document.getElementById(\"amount\");\n    console.log(concept);\n\n    fetch(`http://localhost:3001/edit/4`, {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify({\n        concept: concept.value,\n        amount: amount.value,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.success) {\n          alert(\"data is updated!\");\n        }\n      });\n  };\n\n  const [itemDate, setItemDate] = useState([]);\n  let totalAmount = 0;\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const itemDelete = async (id) => {\n    await fetch(`http://localhost:3001/delete/${id}`, {\n      method: 'DELETE',\n    })\n  }\n\n  const getItem = (item) => {\n    setItemDate(item)\n    setIsUpdating(true);\n  }\n\n  const getDate = (date) => {\n    let parseDate = date.substring(0, 10);\n    return parseDate;\n  };\n\n  return (\n    <div className=\"list-item\">\n      <div>\n        <h2>ITEM LIST</h2>\n      </div>\n      <hr />\n      <div>\n        {!items? \"Loading...\" : items\n              .slice(items.length - 10)\n              .reverse()\n              .map((item, index) => {\n                if(item.type === 0){\n                  totalAmount= totalAmount + item.amount;\n                } else{\n                  totalAmount= totalAmount - item.amount;\n                }\n                return (\n                  <div>\n                    <div\n                      className={item.type === 0 ? \"item-green\" : \"item-red\"}\n                      key={index}\n                    >\n                      <button\n                        className=\"update-btn\"\n                        onClick={() => getItem(item)}\n                      >\n                        Edit\n                      </button>\n                      {item.concept} | {getDate(item.date)} |{\" \"}\n                      {item.type === 0 ? \"+\" : \"-\"}${item.amount}\n                      <button className=\"delete-btn\" onClick={()=>itemDelete(item.id)}>\n                        Delete\n                      </button>\n                    </div>\n                    <hr />\n                  </div>\n                );\n              })\n              }\n        <div>MONTO TOTAL: {totalAmount}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemList;\n"]},"metadata":{},"sourceType":"module"}