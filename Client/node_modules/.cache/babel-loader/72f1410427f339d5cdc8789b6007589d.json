{"ast":null,"code":"var _jsxFileName = \"/home/santi/Escritorio/Working-dir/Challenge-js/Client/src/views/Home/ItemList/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './itemList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemList = () => {\n  _s();\n\n  const url = 'http://localhost:3000/movements';\n  const [items, setItems] = useState();\n\n  const fetchApi = async () => {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    setItems(responseJSON);\n  };\n\n  useEffect(() => {\n    fetchApi();\n  }, []);\n  /*const totalAmountListener = () => {\n      let totalAmount;\n      for(let item in items){\n        totalAmount = totalAmount + item[3];\n      }\n      return totalAmount;\n  }\n  const getDate = (date) => {\n    let parseDate = date.substring(0, 10);\n    return parseDate;\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ITEM LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: !items ? 'Loading...' : items.slice(items.length - 10).reverse().map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: item.type === 1 ? 'item-green' : 'item-red',\n          children: [item.concept, \" | \", item.date, \" | \", item.type === 1 ? '+' : '-', \"$\", item.amount]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemList, \"H7xGRC8bQBn4QeoZ9iIz2rALY5A=\");\n\n_c = ItemList;\nexport default ItemList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"sources":["/home/santi/Escritorio/Working-dir/Challenge-js/Client/src/views/Home/ItemList/index.js"],"names":["React","useEffect","useState","ItemList","url","items","setItems","fetchApi","response","fetch","responseJSON","json","slice","length","reverse","map","item","index","type","concept","date","amount"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,GAAG,GAAG,iCAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,EAAlC;;AACA,QAAMK,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,CAA5B;AACA,UAAMM,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AACAL,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACD,GAJD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,sBACE;AAAA,4BACI;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,gBACE,CAACF,KAAD,GAAS,YAAT,GACAA,KAAK,CAACO,KAAN,CAAYP,KAAK,CAACQ,MAAN,GAAa,EAAzB,EAA6BC,OAA7B,GAAuCC,GAAvC,CAA2C,CAACC,IAAD,EAAMC,KAAN,KAAgB;AACvD,4BAAO;AAAI,UAAA,SAAS,EAAED,IAAI,CAACE,IAAL,KAAY,CAAZ,GAAgB,YAAhB,GAA+B,UAA9C;AAAA,qBAAuEF,IAAI,CAACG,OAA5E,SAAwFH,IAAI,CAACI,IAA7F,SAAsGJ,IAAI,CAACE,IAAL,KAAY,CAAZ,GAAgB,GAAhB,GAAsB,GAA5H,OAAkIF,IAAI,CAACK,MAAvI;AAAA,WAA+DJ,KAA/D;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFF;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAtCD;;GAAMd,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './itemList.css';\n\nconst ItemList = () => {\n    const url = 'http://localhost:3000/movements'\n    const [items, setItems] = useState()\n    const fetchApi = async () => {\n      const response = await fetch(url)\n      const responseJSON = await response.json()\n      setItems(responseJSON)\n    }\n    useEffect(() => {\n      fetchApi()\n    }, [])\n    /*const totalAmountListener = () => {\n        let totalAmount;\n        for(let item in items){\n          totalAmount = totalAmount + item[3];\n        }\n        return totalAmount;\n    }\n    const getDate = (date) => {\n      let parseDate = date.substring(0, 10);\n      return parseDate;\n    }*/\n  return (\n    <div>\n        <div>\n        <h2>\n            ITEM LIST\n        </h2>\n        </div>\n        <ul>\n        { !items ? 'Loading...' : \n          items.slice(items.length-10).reverse().map((item,index) => {\n              return <li className={item.type===1 ? 'item-green' : 'item-red'} key={index}>{item.concept} | {item.date} | {item.type===1 ? '+' : '-'}${item.amount}</li>       \n          })\n        }\n        </ul>\n    </div>\n  );\n};\n\nexport default ItemList;\n"]},"metadata":{},"sourceType":"module"}